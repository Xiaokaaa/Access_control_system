C51 COMPILER V9.01   LCD12864                                                              05/22/2022 16:14:35 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN lcd12864.OBJ
COMPILER INVOKED BY: D:\soft\C51\BIN\C51.EXE lcd12864.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #include "lcd12864.h"
   4                      
   5          unsigned char code AC_TABLE[]=
   6          {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,
   7           0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,
   8           0x88,0x89,0x8a,0x8b,0x8c,0x8d,0x8e,0x8f,
   9           0x98,0x99,0x9a,0x9b,0x9c,0x9d,0x9e,0x9f};//32个汉字显示坐标地址
  10          
  11          void SendByte(unsigned char Dbyte)      //功能 ：发送一个字节
  12          {
  13   1              unsigned char i;
  14   1              for(i=0; i<8; i++)
  15   1              {
  16   2                      SCK = 0;
  17   2                      Dbyte = Dbyte << 1;     
  18   2                      SID = CY;       //CY：进位标志位赋给SID
  19   2                      SCK = 1;
  20   2                      SCK = 0;
  21   2              }
  22   1      }
  23          
  24          unsigned char ReceiveByte(void)  //功能 ：接收一个字节
  25          {
  26   1              unsigned char i,temp1,temp2;
  27   1              temp1 = temp2 = 0;
  28   1              for(i=0; i<8; i++)
  29   1              {
  30   2                      temp1 = temp1 << 1;
  31   2                      SCK = 0;
  32   2                      SCK = 1;                
  33   2                      SCK = 0;
  34   2                      if(SID) temp1++;
  35   2              }
  36   1              for(i=0; i<8; i++)
  37   1              {
  38   2                      temp2 = temp2 << 1;
  39   2                      SCK = 0;
  40   2                      SCK = 1;
  41   2                      SCK = 0;
  42   2                      if(SID) temp2++;
  43   2              }
  44   1              return ((0xf0 & temp1) + (0x0f & temp2));
  45   1      }
  46          
  47          void CheckBusy( void )//功能 ：检查忙状态
  48          {
  49   1              do SendByte(0xfc);     //11111,RW(1),RS(0),0
  50   1              while(0x80 & ReceiveByte());
  51   1      }
  52          
  53          void WriteCommand( unsigned char Cbyte )        //功能 ：写一个字节的指令
  54          {
  55   1              CS = 1;
C51 COMPILER V9.01   LCD12864                                                              05/22/2022 16:14:35 PAGE 2   

  56   1              CheckBusy();
  57   1              SendByte(0xf8);     //11111,RW(0),RS(0),0
  58   1              SendByte(0xf0 & Cbyte); //高四位
  59   1              SendByte(0xf0 & Cbyte << 4);    //低四位
  60   1              CS = 0;
  61   1      }
  62          
  63          void WriteData( unsigned char Dbyte )   //功能 ：写一个字节的数据
  64          {
  65   1              CS = 1;
  66   1              CheckBusy();
  67   1              SendByte(0xfa);          //11111,RW(0),RS(1),0
  68   1              SendByte(0xf0 & Dbyte);
  69   1              SendByte(0xf0 & Dbyte << 4);
  70   1              CS = 0;
  71   1      }
  72          
  73          void Lcd_Init( void )   //功能 ：lcd初始化
  74          {
  75   1           WriteCommand(0x30);        //基本指令操作
  76   1           WriteCommand(0x03);        //地址归位？
  77   1           WriteCommand(0x0c);        //整体显示
  78   1           WriteCommand(0x01);        //清除显示
  79   1           WriteCommand(0x06);        //进入点设定？
  80   1      }
  81          
  82          void Location_xy_12864(unsigned char x,unsigned char y)   //功能 ：设定光标
  83          {
  84   1              switch(x)
  85   1              {
  86   2                      case 0: x=0x80; break;
  87   2                      case 1: x=0x90; break;
  88   2                      case 2: x=0x88; break;
  89   2                      case 3: x=0x98; break;
  90   2                      default: x=0x80;
  91   2              }
  92   1              y = y & 0x07;
  93   1              WriteCommand(0x30);
  94   1              WriteCommand(y + x);
  95   1              WriteCommand(y + x);
  96   1      
  97   1      }
  98          
  99          void Lcd_ClearTXT( void )       //功能 ：清除文本
 100          {
 101   1              unsigned char i;
 102   1              WriteCommand(0x30);
 103   1              WriteCommand(0x80);
 104   1              for(i=0; i<64; i++) WriteData(0x20);    // 0x20：半宽空白符
 105   1              Location_xy_12864(0,0);     
 106   1      }
 107          
 108          void PutStr(unsigned char row, unsigned char col, unsigned char *puts)  //功能 ：显示字符串
 109          {    
 110   1              WriteCommand(0x30);
 111   1              WriteCommand(AC_TABLE[8*row + col]);
 112   1              while(*puts != '\0')
 113   1              {
 114   2                      if(col == 8)
 115   2                      {
 116   3                              col = 0;
 117   3                              row++;
C51 COMPILER V9.01   LCD12864                                                              05/22/2022 16:14:35 PAGE 3   

 118   3                      }
 119   2                      if(row == 4) row=0;
 120   2                      WriteCommand(AC_TABLE[8*row + col]);
 121   2                      WriteData(*puts);
 122   2                      puts++;
 123   2                      if(*puts != '\0')
 124   2                      {
 125   3                              WriteData(*puts);
 126   3                              puts++;
 127   3                              col++;
 128   3                      }  
 129   2              }
 130   1      }
 131          void Interface(unsigned char num)  //选择显示界面
 132          {
 133   1              switch(num)
 134   1              {
 135   2                      case 1: Lcd_ClearTXT();                                 //欢迎界面
 136   2                                      PutStr(0,0,"    欢迎使用    ");
 137   2                                      PutStr(1,0,"  智能门禁系统  ");
 138   2                                      PutStr(2,0,"请输入密码或刷卡");
 139   2                                      break;
 140   2                      case 2: PutStr(0,0,"  密码修改成功  ");//密码修改成功界面
 141   2                                      PutStr(3,0,"  按任意键继续  ");
 142   2                                      break;
 143   2                      case 3: PutStr(0,0,"  密码修改失败  ");//密码修改失败界面
 144   2                                      PutStr(1,0,"两次输入的密码不"); 
 145   2                                      PutStr(2,0,"一致，请重新操作");       
 146   2                                      PutStr(3,0,"  按任意键继续  ");         
 147   2                                      break;
 148   2                      case 4: PutStr(0,0,"按键1 : 打开门禁");//菜单界面
 149   2                                      PutStr(1,0,"按键2 : 修改密码");
 150   2                                      PutStr(2,0,"按键3 : 卡片管理");
 151   2                                      PutStr(3,0,"按键4 : 退出系统");
 152   2                                      break;
 153   2                      case 5: 
 154   2                                      break;
 155   2                      default:break;
 156   2              }
 157   1      }  
 158          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    522    ----
   CONSTANT SIZE    =    236    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
